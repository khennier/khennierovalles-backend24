<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{title}}</title>
    <link rel="stylesheet" href="/src/public/styles.css"> 
    <script src="/socket.io/socket.io.js"></script>
</head>
<body>
    <div class="container">
        <h1>{{title}}</h1>

        <div class="cart-button-container" style="position: relative; display: inline-block;">
            <button onclick="goToCart()">Ir al carrito</button>
            <span id="cart-count" class="cart-count">0</span>
        </div>

        <ul id="product-list">
            {{#each products}}
                <li data-id="{{this._id}}">
                    <div class="product-info">
                        <div class="product-title">{{this.title}}</div>
                        <div class="product-price">$ {{this.price}}</div>
                        <div class="product-details">{{this.description}}</div>
                        <div class="product-meta">Code: {{this.code}} | Status: {{#if this.status}}Available{{else}}Out of Stock{{/if}} | Stock: {{this.stock}} | Category: {{this.category}}</div>
                    </div>
                    <button onclick="addToCart('{{this._id}}')">Add to Cart</button>
                    <a href="/products/{{this._id}}" class="details-link">View Details</a>
                </li>
            {{/each}}
        </ul>

        <div id="pagination">
            {{#if hasPrevPage}}
                <a href="{{prevLink}}">Previous</a>
            {{/if}}
            Page {{page}} of {{totalPages}}
            {{#if hasNextPage}}
                <a href="{{nextLink}}">Next</a>
            {{/if}}
        </div>
    </div>

    <script>
        const currentUserCartId = "{{cartId}}"; 

        function goToCart() {
            window.location.href = `/carts/${currentUserCartId}`;
        }

        // Función para actualizar el contador del carrito
    function updateCartCount() {
    fetch(`/api/carts/${currentUserCartId}`)
        .then(response => response.json())
        .then(data => {
            if (data.products && Array.isArray(data.products)) {
                const cartCount = data.products.reduce((acc, item) => acc + item.quantity, 0);
                document.getElementById('cart-count').textContent = cartCount;
            } else {
                console.error('Failed to fetch cart data:', data);
                document.getElementById('cart-count').textContent = '0';
            }
        })
        .catch(error => {
            console.error('Error:', error);
            document.getElementById('cart-count').textContent = '0';
        });
}


        document.addEventListener('DOMContentLoaded', () => {
            updateCartCount(); // Actualizar el contador al cargar la página

            const socket = io();

            socket.on('updateProducts', (product) => {
                const productList = document.getElementById('product-list');
                let productItem = document.querySelector(`li[data-id='${product._id}']`);
                if (productItem) {
                    productItem.innerHTML = `
                        <div class="product-info">
                            <div class="product-title">${product.title}</div>
                            <div class="product-price">$${product.price}</div>
                            <div class="product-details">${product.description}</div>
                            <div class="product-meta">Code: ${product.code} | Status: ${product.status ? 'Available' : 'Out of Stock'} | Stock: ${product.stock} | Category: ${product.category}</div>
                        </div>
                        <button onclick="addToCart('${product._id}')">Add to Cart</button>
                        <a href="/products/${product._id}" class="details-link">View Details</a>
                    `;
                } else {
                    const newProduct = document.createElement('li');
                    newProduct.dataset.id = product._id;
                    newProduct.innerHTML = `
                        <div class="product-info">
                            <div class="product-title">${product.title}</div>
                            <div class="product-price">$${product.price}</div>
                            <div class="product-details">${product.description}</div>
                            <div class="product-meta">Code: ${product.code} | Status: ${product.status ? 'Available' : 'Out of Stock'} | Stock: ${product.stock} | Category: ${product.category}</div>
                        </div>
                        <button onclick="addToCart('${product._id}')">Add to Cart</button>
                        <a href="/products/${product._id}" class="details-link">View Details</a>
                    `;
                    productList.appendChild(newProduct);
                }
            });

            socket.on('removeProduct', (productId) => {
                const productList = document.getElementById('product-list');
                const productToRemove = document.querySelector(`li[data-id='${productId}']`);
                if (productToRemove) {
                    productList.removeChild(productToRemove);
                }
            });
        });

        //Agregar al carrito function
        function addToCart(productId) {
            const currentUserCartId = "{{cartId}}";  
            const url = `/api/carts/${currentUserCartId}/products/${productId}`;

            fetch(url, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ quantity: 1 })
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                return response.json();
            })
            .then(data => {
                updateCartCount(); // Actualizar el contador después de agregar un producto
            })
            .catch(error => console.error('Error:', error));
        }
    </script>
</body>
</html>
